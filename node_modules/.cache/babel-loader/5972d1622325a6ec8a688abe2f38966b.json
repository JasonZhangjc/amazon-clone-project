{"ast":null,"code":"import _classCallCheck from \"/home/jasonzjc/Java_Programs/amazon-clone/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/jasonzjc/Java_Programs/amazon-clone/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _asyncToGenerator from \"/home/jasonzjc/Java_Programs/amazon-clone/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _regeneratorRuntime from \"/home/jasonzjc/Java_Programs/amazon-clone/node_modules/@babel/runtime/regenerator/index.js\";\nimport firebase from '@firebase/app-compat';\nimport * as exp from '@firebase/auth/internal';\nimport { Component } from '@firebase/component';\nimport { isBrowserExtension, isReactNative, isNode, getUA, isIE, isIndexedDBAvailable, FirebaseError } from '@firebase/util';\nvar name = \"@firebase/auth-compat\";\nvar version = \"0.2.5\";\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar CORDOVA_ONDEVICEREADY_TIMEOUT_MS = 1000;\n\nfunction _getCurrentScheme() {\n  var _a;\n\n  return ((_a = self === null || self === void 0 ? void 0 : self.location) === null || _a === void 0 ? void 0 : _a.protocol) || null;\n}\n/**\r\n * @return {boolean} Whether the current environment is http or https.\r\n */\n\n\nfunction _isHttpOrHttps() {\n  return _getCurrentScheme() === 'http:' || _getCurrentScheme() === 'https:';\n}\n/**\r\n * @param {?string=} ua The user agent.\r\n * @return {boolean} Whether the app is rendered in a mobile iOS or Android\r\n *     Cordova environment.\r\n */\n\n\nfunction _isAndroidOrIosCordovaScheme() {\n  var ua = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getUA();\n  return !!((_getCurrentScheme() === 'file:' || _getCurrentScheme() === 'ionic:') && ua.toLowerCase().match(/iphone|ipad|ipod|android/));\n}\n/**\r\n * @return {boolean} Whether the environment is a native environment, where\r\n *     CORS checks do not apply.\r\n */\n\n\nfunction _isNativeEnvironment() {\n  return isReactNative() || isNode();\n}\n/**\r\n * Checks whether the user agent is IE11.\r\n * @return {boolean} True if it is IE11.\r\n */\n\n\nfunction _isIe11() {\n  return isIE() && (document === null || document === void 0 ? void 0 : document.documentMode) === 11;\n}\n/**\r\n * Checks whether the user agent is Edge.\r\n * @param {string} userAgent The browser user agent string.\r\n * @return {boolean} True if it is Edge.\r\n */\n\n\nfunction _isEdge() {\n  var ua = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getUA();\n  return /Edge\\/\\d+/.test(ua);\n}\n/**\r\n * @param {?string=} opt_userAgent The navigator user agent.\r\n * @return {boolean} Whether local storage is not synchronized between an iframe\r\n *     and a popup of the same domain.\r\n */\n\n\nfunction _isLocalStorageNotSynchronized() {\n  var ua = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getUA();\n  return _isIe11() || _isEdge(ua);\n}\n/** @return {boolean} Whether web storage is supported. */\n\n\nfunction _isWebStorageSupported() {\n  try {\n    var storage = self.localStorage;\n\n    var key = exp._generateEventId();\n\n    if (storage) {\n      // setItem will throw an exception if we cannot access WebStorage (e.g.,\n      // Safari in private mode).\n      storage['setItem'](key, '1');\n      storage['removeItem'](key); // For browsers where iframe web storage does not synchronize with a popup\n      // of the same domain, indexedDB is used for persistent storage. These\n      // browsers include IE11 and Edge.\n      // Make sure it is supported (IE11 and Edge private mode does not support\n      // that).\n\n      if (_isLocalStorageNotSynchronized()) {\n        // In such browsers, if indexedDB is not supported, an iframe cannot be\n        // notified of the popup sign in result.\n        return isIndexedDBAvailable();\n      }\n\n      return true;\n    }\n  } catch (e) {\n    // localStorage is not available from a worker. Test availability of\n    // indexedDB.\n    return _isWorker() && isIndexedDBAvailable();\n  }\n\n  return false;\n}\n/**\r\n * @param {?Object=} global The optional global scope.\r\n * @return {boolean} Whether current environment is a worker.\r\n */\n\n\nfunction _isWorker() {\n  // WorkerGlobalScope only defined in worker environment.\n  return typeof global !== 'undefined' && 'WorkerGlobalScope' in global && 'importScripts' in global;\n}\n\nfunction _isPopupRedirectSupported() {\n  return (_isHttpOrHttps() || isBrowserExtension() || _isAndroidOrIosCordovaScheme()) && // React Native with remote debugging reports its location.protocol as\n  // http.\n  !_isNativeEnvironment() && // Local storage has to be supported for browser popup and redirect\n  // operations to work.\n  _isWebStorageSupported() && // DOM, popups and redirects are not supported within a worker.\n  !_isWorker();\n}\n/** Quick check that indicates the platform *may* be Cordova */\n\n\nfunction _isLikelyCordova() {\n  return _isAndroidOrIosCordovaScheme() && typeof document !== 'undefined';\n}\n\nfunction _isCordova() {\n  return _isCordova2.apply(this, arguments);\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction _isCordova2() {\n  _isCordova2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee17() {\n    return _regeneratorRuntime.wrap(function _callee17$(_context17) {\n      while (1) {\n        switch (_context17.prev = _context17.next) {\n          case 0:\n            if (_isLikelyCordova()) {\n              _context17.next = 2;\n              break;\n            }\n\n            return _context17.abrupt(\"return\", false);\n\n          case 2:\n            return _context17.abrupt(\"return\", new Promise(function (resolve) {\n              var timeoutId = setTimeout(function () {\n                // We've waited long enough; the telltale Cordova event didn't happen\n                resolve(false);\n              }, CORDOVA_ONDEVICEREADY_TIMEOUT_MS);\n              document.addEventListener('deviceready', function () {\n                clearTimeout(timeoutId);\n                resolve(true);\n              });\n            }));\n\n          case 3:\n          case \"end\":\n            return _context17.stop();\n        }\n      }\n    }, _callee17);\n  }));\n  return _isCordova2.apply(this, arguments);\n}\n\nvar Persistence = {\n  LOCAL: 'local',\n  NONE: 'none',\n  SESSION: 'session'\n};\nvar _assert$3 = exp._assert;\nvar PERSISTENCE_KEY = 'persistence';\n/**\r\n * Validates that an argument is a valid persistence value. If an invalid type\r\n * is specified, an error is thrown synchronously.\r\n */\n\nfunction _validatePersistenceArgument(auth, persistence) {\n  _assert$3(Object.values(Persistence).includes(persistence), auth, \"invalid-persistence-type\"\n  /* INVALID_PERSISTENCE */\n  ); // Validate if the specified type is supported in the current environment.\n\n\n  if (isReactNative()) {\n    // This is only supported in a browser.\n    _assert$3(persistence !== Persistence.SESSION, auth, \"unsupported-persistence-type\"\n    /* UNSUPPORTED_PERSISTENCE */\n    );\n\n    return;\n  }\n\n  if (isNode()) {\n    // Only none is supported in Node.js.\n    _assert$3(persistence === Persistence.NONE, auth, \"unsupported-persistence-type\"\n    /* UNSUPPORTED_PERSISTENCE */\n    );\n\n    return;\n  }\n\n  if (_isWorker()) {\n    // In a worker environment, either LOCAL or NONE are supported.\n    // If indexedDB not supported and LOCAL provided, throw an error\n    _assert$3(persistence === Persistence.NONE || persistence === Persistence.LOCAL && isIndexedDBAvailable(), auth, \"unsupported-persistence-type\"\n    /* UNSUPPORTED_PERSISTENCE */\n    );\n\n    return;\n  } // This is restricted by what the browser supports.\n\n\n  _assert$3(persistence === Persistence.NONE || _isWebStorageSupported(), auth, \"unsupported-persistence-type\"\n  /* UNSUPPORTED_PERSISTENCE */\n  );\n}\n\nfunction _savePersistenceForRedirect(_x) {\n  return _savePersistenceForRedirect2.apply(this, arguments);\n}\n\nfunction _savePersistenceForRedirect2() {\n  _savePersistenceForRedirect2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee18(auth) {\n    var win, key;\n    return _regeneratorRuntime.wrap(function _callee18$(_context18) {\n      while (1) {\n        switch (_context18.prev = _context18.next) {\n          case 0:\n            _context18.next = 2;\n            return auth._initializationPromise;\n\n          case 2:\n            win = getSelfWindow();\n            key = exp._persistenceKeyName(PERSISTENCE_KEY, auth.config.apiKey, auth.name);\n\n            if (win === null || win === void 0 ? void 0 : win.sessionStorage) {\n              win.sessionStorage.setItem(key, auth._getPersistence());\n            }\n\n          case 5:\n          case \"end\":\n            return _context18.stop();\n        }\n      }\n    }, _callee18);\n  }));\n  return _savePersistenceForRedirect2.apply(this, arguments);\n}\n\nfunction _getPersistencesFromRedirect(apiKey, appName) {\n  var win = getSelfWindow();\n\n  if (!(win === null || win === void 0 ? void 0 : win.sessionStorage)) {\n    return [];\n  }\n\n  var key = exp._persistenceKeyName(PERSISTENCE_KEY, apiKey, appName);\n\n  var persistence = win.sessionStorage.getItem(key);\n\n  switch (persistence) {\n    case Persistence.NONE:\n      return [exp.inMemoryPersistence];\n\n    case Persistence.LOCAL:\n      return [exp.indexedDBLocalPersistence, exp.browserSessionPersistence];\n\n    case Persistence.SESSION:\n      return [exp.browserSessionPersistence];\n\n    default:\n      return [];\n  }\n}\n\nfunction getSelfWindow() {\n  return typeof window !== 'undefined' ? window : null;\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar _assert$2 = exp._assert;\n/** Platform-agnostic popup-redirect resolver */\n\nvar CompatPopupRedirectResolver = /*#__PURE__*/function () {\n  function CompatPopupRedirectResolver() {\n    _classCallCheck(this, CompatPopupRedirectResolver);\n\n    // Create both resolvers for dynamic resolution later\n    this.browserResolver = exp._getInstance(exp.browserPopupRedirectResolver);\n    this.cordovaResolver = exp._getInstance(exp.cordovaPopupRedirectResolver); // The actual resolver in use: either browserResolver or cordovaResolver.\n\n    this.underlyingResolver = null;\n    this._redirectPersistence = exp.browserSessionPersistence;\n    this._completeRedirectFn = exp._getRedirectResult;\n  }\n\n  _createClass(CompatPopupRedirectResolver, [{\n    key: \"_initialize\",\n    value: function () {\n      var _initialize2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(auth) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.selectUnderlyingResolver();\n\n              case 2:\n                return _context.abrupt(\"return\", this.assertedUnderlyingResolver._initialize(auth));\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function _initialize(_x2) {\n        return _initialize2.apply(this, arguments);\n      }\n\n      return _initialize;\n    }()\n  }, {\n    key: \"_openPopup\",\n    value: function () {\n      var _openPopup2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(auth, provider, authType, eventId) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.selectUnderlyingResolver();\n\n              case 2:\n                return _context2.abrupt(\"return\", this.assertedUnderlyingResolver._openPopup(auth, provider, authType, eventId));\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function _openPopup(_x3, _x4, _x5, _x6) {\n        return _openPopup2.apply(this, arguments);\n      }\n\n      return _openPopup;\n    }()\n  }, {\n    key: \"_openRedirect\",\n    value: function () {\n      var _openRedirect2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(auth, provider, authType, eventId) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.selectUnderlyingResolver();\n\n              case 2:\n                return _context3.abrupt(\"return\", this.assertedUnderlyingResolver._openRedirect(auth, provider, authType, eventId));\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function _openRedirect(_x7, _x8, _x9, _x10) {\n        return _openRedirect2.apply(this, arguments);\n      }\n\n      return _openRedirect;\n    }()\n  }, {\n    key: \"_isIframeWebStorageSupported\",\n    value: function _isIframeWebStorageSupported(auth, cb) {\n      this.assertedUnderlyingResolver._isIframeWebStorageSupported(auth, cb);\n    }\n  }, {\n    key: \"_originValidation\",\n    value: function _originValidation(auth) {\n      return this.assertedUnderlyingResolver._originValidation(auth);\n    }\n  }, {\n    key: \"_shouldInitProactively\",\n    get: function get() {\n      return _isLikelyCordova() || this.browserResolver._shouldInitProactively;\n    }\n  }, {\n    key: \"assertedUnderlyingResolver\",\n    get: function get() {\n      _assert$2(this.underlyingResolver, \"internal-error\"\n      /* INTERNAL_ERROR */\n      );\n\n      return this.underlyingResolver;\n    }\n  }, {\n    key: \"selectUnderlyingResolver\",\n    value: function () {\n      var _selectUnderlyingResolver = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var isCordova;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!this.underlyingResolver) {\n                  _context4.next = 2;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\");\n\n              case 2:\n                _context4.next = 4;\n                return _isCordova();\n\n              case 4:\n                isCordova = _context4.sent;\n                this.underlyingResolver = isCordova ? this.cordovaResolver : this.browserResolver;\n\n              case 6:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function selectUnderlyingResolver() {\n        return _selectUnderlyingResolver.apply(this, arguments);\n      }\n\n      return selectUnderlyingResolver;\n    }()\n  }]);\n\n  return CompatPopupRedirectResolver;\n}();\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction unwrap(object) {\n  return object.unwrap();\n}\n\nfunction wrapped(object) {\n  return object.wrapped();\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction credentialFromResponse(userCredential) {\n  return credentialFromObject(userCredential);\n}\n\nfunction attachExtraErrorFields(auth, e) {\n  var _a; // The response contains all fields from the server which may or may not\n  // actually match the underlying type\n\n\n  var response = (_a = e.customData) === null || _a === void 0 ? void 0 : _a._tokenResponse;\n\n  if (e.code === 'auth/multi-factor-auth-required') {\n    var mfaErr = e;\n    mfaErr.resolver = new MultiFactorResolver(auth, exp.getMultiFactorResolver(auth, e));\n  } else if (response) {\n    var credential = credentialFromObject(e);\n    var credErr = e;\n\n    if (credential) {\n      credErr.credential = credential;\n      credErr.tenantId = response.tenantId || undefined;\n      credErr.email = response.email || undefined;\n      credErr.phoneNumber = response.phoneNumber || undefined;\n    }\n  }\n}\n\nfunction credentialFromObject(object) {\n  var _ref = object instanceof FirebaseError ? object.customData : object,\n      _tokenResponse = _ref._tokenResponse;\n\n  if (!_tokenResponse) {\n    return null;\n  } // Handle phone Auth credential responses, as they have a different format\n  // from other backend responses (i.e. no providerId). This is also only the\n  // case for user credentials (does not work for errors).\n\n\n  if (!(object instanceof FirebaseError)) {\n    if ('temporaryProof' in _tokenResponse && 'phoneNumber' in _tokenResponse) {\n      return exp.PhoneAuthProvider.credentialFromResult(object);\n    }\n  }\n\n  var providerId = _tokenResponse.providerId; // Email and password is not supported as there is no situation where the\n  // server would return the password to the client.\n\n  if (!providerId || providerId === exp.ProviderId.PASSWORD) {\n    return null;\n  }\n\n  var provider;\n\n  switch (providerId) {\n    case exp.ProviderId.GOOGLE:\n      provider = exp.GoogleAuthProvider;\n      break;\n\n    case exp.ProviderId.FACEBOOK:\n      provider = exp.FacebookAuthProvider;\n      break;\n\n    case exp.ProviderId.GITHUB:\n      provider = exp.GithubAuthProvider;\n      break;\n\n    case exp.ProviderId.TWITTER:\n      provider = exp.TwitterAuthProvider;\n      break;\n\n    default:\n      var oauthIdToken = _tokenResponse.oauthIdToken,\n          oauthAccessToken = _tokenResponse.oauthAccessToken,\n          oauthTokenSecret = _tokenResponse.oauthTokenSecret,\n          pendingToken = _tokenResponse.pendingToken,\n          nonce = _tokenResponse.nonce;\n\n      if (!oauthAccessToken && !oauthTokenSecret && !oauthIdToken && !pendingToken) {\n        return null;\n      } // TODO(avolkovi): uncomment this and get it working with SAML & OIDC\n\n\n      if (pendingToken) {\n        if (providerId.startsWith('saml.')) {\n          return exp.SAMLAuthCredential._create(providerId, pendingToken);\n        } else {\n          // OIDC and non-default providers excluding Twitter.\n          return exp.OAuthCredential._fromParams({\n            providerId: providerId,\n            signInMethod: providerId,\n            pendingToken: pendingToken,\n            idToken: oauthIdToken,\n            accessToken: oauthAccessToken\n          });\n        }\n      }\n\n      return new exp.OAuthProvider(providerId).credential({\n        idToken: oauthIdToken,\n        accessToken: oauthAccessToken,\n        rawNonce: nonce\n      });\n  }\n\n  return object instanceof FirebaseError ? provider.credentialFromError(object) : provider.credentialFromResult(object);\n}\n\nfunction convertCredential(auth, credentialPromise) {\n  return credentialPromise.catch(function (e) {\n    if (e instanceof FirebaseError) {\n      attachExtraErrorFields(auth, e);\n    }\n\n    throw e;\n  }).then(function (credential) {\n    var operationType = credential.operationType;\n    var user = credential.user;\n    return {\n      operationType: operationType,\n      credential: credentialFromResponse(credential),\n      additionalUserInfo: exp.getAdditionalUserInfo(credential),\n      user: User.getOrCreate(user)\n    };\n  });\n}\n\nfunction convertConfirmationResult(_x11, _x12) {\n  return _convertConfirmationResult.apply(this, arguments);\n}\n\nfunction _convertConfirmationResult() {\n  _convertConfirmationResult = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee19(auth, confirmationResultPromise) {\n    var confirmationResultExp;\n    return _regeneratorRuntime.wrap(function _callee19$(_context19) {\n      while (1) {\n        switch (_context19.prev = _context19.next) {\n          case 0:\n            _context19.next = 2;\n            return confirmationResultPromise;\n\n          case 2:\n            confirmationResultExp = _context19.sent;\n            return _context19.abrupt(\"return\", {\n              verificationId: confirmationResultExp.verificationId,\n              confirm: function confirm(verificationCode) {\n                return convertCredential(auth, confirmationResultExp.confirm(verificationCode));\n              }\n            });\n\n          case 4:\n          case \"end\":\n            return _context19.stop();\n        }\n      }\n    }, _callee19);\n  }));\n  return _convertConfirmationResult.apply(this, arguments);\n}\n\nvar MultiFactorResolver = /*#__PURE__*/function () {\n  function MultiFactorResolver(auth, resolver) {\n    _classCallCheck(this, MultiFactorResolver);\n\n    this.resolver = resolver;\n    this.auth = wrapped(auth);\n  }\n\n  _createClass(MultiFactorResolver, [{\n    key: \"session\",\n    get: function get() {\n      return this.resolver.session;\n    }\n  }, {\n    key: \"hints\",\n    get: function get() {\n      return this.resolver.hints;\n    }\n  }, {\n    key: \"resolveSignIn\",\n    value: function resolveSignIn(assertion) {\n      return convertCredential(unwrap(this.auth), this.resolver.resolveSignIn(assertion));\n    }\n  }]);\n\n  return MultiFactorResolver;\n}();\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar User = /*#__PURE__*/function () {\n  function User(_delegate) {\n    _classCallCheck(this, User);\n\n    this._delegate = _delegate;\n    this.multiFactor = exp.multiFactor(_delegate);\n  }\n\n  _createClass(User, [{\n    key: \"delete\",\n    value: function _delete() {\n      return this._delegate.delete();\n    }\n  }, {\n    key: \"reload\",\n    value: function reload() {\n      return this._delegate.reload();\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return this._delegate.toJSON();\n    }\n  }, {\n    key: \"getIdTokenResult\",\n    value: function getIdTokenResult(forceRefresh) {\n      return this._delegate.getIdTokenResult(forceRefresh);\n    }\n  }, {\n    key: \"getIdToken\",\n    value: function getIdToken(forceRefresh) {\n      return this._delegate.getIdToken(forceRefresh);\n    }\n  }, {\n    key: \"linkAndRetrieveDataWithCredential\",\n    value: function linkAndRetrieveDataWithCredential(credential) {\n      return this.linkWithCredential(credential);\n    }\n  }, {\n    key: \"linkWithCredential\",\n    value: function () {\n      var _linkWithCredential = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(credential) {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                return _context5.abrupt(\"return\", convertCredential(this.auth, exp.linkWithCredential(this._delegate, credential)));\n\n              case 1:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function linkWithCredential(_x13) {\n        return _linkWithCredential.apply(this, arguments);\n      }\n\n      return linkWithCredential;\n    }()\n  }, {\n    key: \"linkWithPhoneNumber\",\n    value: function () {\n      var _linkWithPhoneNumber = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(phoneNumber, applicationVerifier) {\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                return _context6.abrupt(\"return\", convertConfirmationResult(this.auth, exp.linkWithPhoneNumber(this._delegate, phoneNumber, applicationVerifier)));\n\n              case 1:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function linkWithPhoneNumber(_x14, _x15) {\n        return _linkWithPhoneNumber.apply(this, arguments);\n      }\n\n      return linkWithPhoneNumber;\n    }()\n  }, {\n    key: \"linkWithPopup\",\n    value: function () {\n      var _linkWithPopup = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(provider) {\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                return _context7.abrupt(\"return\", convertCredential(this.auth, exp.linkWithPopup(this._delegate, provider, CompatPopupRedirectResolver)));\n\n              case 1:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function linkWithPopup(_x16) {\n        return _linkWithPopup.apply(this, arguments);\n      }\n\n      return linkWithPopup;\n    }()\n  }, {\n    key: \"linkWithRedirect\",\n    value: function () {\n      var _linkWithRedirect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(provider) {\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return _savePersistenceForRedirect(exp._castAuth(this.auth));\n\n              case 2:\n                return _context8.abrupt(\"return\", exp.linkWithRedirect(this._delegate, provider, CompatPopupRedirectResolver));\n\n              case 3:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function linkWithRedirect(_x17) {\n        return _linkWithRedirect.apply(this, arguments);\n      }\n\n      return linkWithRedirect;\n    }()\n  }, {\n    key: \"reauthenticateAndRetrieveDataWithCredential\",\n    value: function reauthenticateAndRetrieveDataWithCredential(credential) {\n      return this.reauthenticateWithCredential(credential);\n    }\n  }, {\n    key: \"reauthenticateWithCredential\",\n    value: function () {\n      var _reauthenticateWithCredential = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(credential) {\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                return _context9.abrupt(\"return\", convertCredential(this.auth, exp.reauthenticateWithCredential(this._delegate, credential)));\n\n              case 1:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function reauthenticateWithCredential(_x18) {\n        return _reauthenticateWithCredential.apply(this, arguments);\n      }\n\n      return reauthenticateWithCredential;\n    }()\n  }, {\n    key: \"reauthenticateWithPhoneNumber\",\n    value: function reauthenticateWithPhoneNumber(phoneNumber, applicationVerifier) {\n      return convertConfirmationResult(this.auth, exp.reauthenticateWithPhoneNumber(this._delegate, phoneNumber, applicationVerifier));\n    }\n  }, {\n    key: \"reauthenticateWithPopup\",\n    value: function reauthenticateWithPopup(provider) {\n      return convertCredential(this.auth, exp.reauthenticateWithPopup(this._delegate, provider, CompatPopupRedirectResolver));\n    }\n  }, {\n    key: \"reauthenticateWithRedirect\",\n    value: function () {\n      var _reauthenticateWithRedirect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(provider) {\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.next = 2;\n                return _savePersistenceForRedirect(exp._castAuth(this.auth));\n\n              case 2:\n                return _context10.abrupt(\"return\", exp.reauthenticateWithRedirect(this._delegate, provider, CompatPopupRedirectResolver));\n\n              case 3:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function reauthenticateWithRedirect(_x19) {\n        return _reauthenticateWithRedirect.apply(this, arguments);\n      }\n\n      return reauthenticateWithRedirect;\n    }()\n  }, {\n    key: \"sendEmailVerification\",\n    value: function sendEmailVerification(actionCodeSettings) {\n      return exp.sendEmailVerification(this._delegate, actionCodeSettings);\n    }\n  }, {\n    key: \"unlink\",\n    value: function () {\n      var _unlink = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11(providerId) {\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                _context11.next = 2;\n                return exp.unlink(this._delegate, providerId);\n\n              case 2:\n                return _context11.abrupt(\"return\", this);\n\n              case 3:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function unlink(_x20) {\n        return _unlink.apply(this, arguments);\n      }\n\n      return unlink;\n    }()\n  }, {\n    key: \"updateEmail\",\n    value: function updateEmail(newEmail) {\n      return exp.updateEmail(this._delegate, newEmail);\n    }\n  }, {\n    key: \"updatePassword\",\n    value: function updatePassword(newPassword) {\n      return exp.updatePassword(this._delegate, newPassword);\n    }\n  }, {\n    key: \"updatePhoneNumber\",\n    value: function updatePhoneNumber(phoneCredential) {\n      return exp.updatePhoneNumber(this._delegate, phoneCredential);\n    }\n  }, {\n    key: \"updateProfile\",\n    value: function updateProfile(profile) {\n      return exp.updateProfile(this._delegate, profile);\n    }\n  }, {\n    key: \"verifyBeforeUpdateEmail\",\n    value: function verifyBeforeUpdateEmail(newEmail, actionCodeSettings) {\n      return exp.verifyBeforeUpdateEmail(this._delegate, newEmail, actionCodeSettings);\n    }\n  }, {\n    key: \"emailVerified\",\n    get: function get() {\n      return this._delegate.emailVerified;\n    }\n  }, {\n    key: \"isAnonymous\",\n    get: function get() {\n      return this._delegate.isAnonymous;\n    }\n  }, {\n    key: \"metadata\",\n    get: function get() {\n      return this._delegate.metadata;\n    }\n  }, {\n    key: \"phoneNumber\",\n    get: function get() {\n      return this._delegate.phoneNumber;\n    }\n  }, {\n    key: \"providerData\",\n    get: function get() {\n      return this._delegate.providerData;\n    }\n  }, {\n    key: \"refreshToken\",\n    get: function get() {\n      return this._delegate.refreshToken;\n    }\n  }, {\n    key: \"tenantId\",\n    get: function get() {\n      return this._delegate.tenantId;\n    }\n  }, {\n    key: \"displayName\",\n    get: function get() {\n      return this._delegate.displayName;\n    }\n  }, {\n    key: \"email\",\n    get: function get() {\n      return this._delegate.email;\n    }\n  }, {\n    key: \"photoURL\",\n    get: function get() {\n      return this._delegate.photoURL;\n    }\n  }, {\n    key: \"providerId\",\n    get: function get() {\n      return this._delegate.providerId;\n    }\n  }, {\n    key: \"uid\",\n    get: function get() {\n      return this._delegate.uid;\n    }\n  }, {\n    key: \"auth\",\n    get: function get() {\n      return this._delegate.auth;\n    }\n  }], [{\n    key: \"getOrCreate\",\n    value: function getOrCreate(user) {\n      if (!User.USER_MAP.has(user)) {\n        User.USER_MAP.set(user, new User(user));\n      }\n\n      return User.USER_MAP.get(user);\n    }\n  }]);\n\n  return User;\n}(); // Maintain a map so that there's always a 1:1 mapping between new User and\n// legacy compat users\n\n\nUser.USER_MAP = new WeakMap();\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar _assert$1 = exp._assert;\n\nvar Auth = /*#__PURE__*/function () {\n  function Auth(app, provider) {\n    _classCallCheck(this, Auth);\n\n    this.app = app;\n\n    if (provider.isInitialized()) {\n      this._delegate = provider.getImmediate();\n      this.linkUnderlyingAuth();\n      return;\n    }\n\n    var apiKey = app.options.apiKey; // TODO: platform needs to be determined using heuristics\n\n    _assert$1(apiKey, \"invalid-api-key\"\n    /* INVALID_API_KEY */\n    , {\n      appName: app.name\n    }); // TODO: platform needs to be determined using heuristics\n\n\n    _assert$1(apiKey, \"invalid-api-key\"\n    /* INVALID_API_KEY */\n    , {\n      appName: app.name\n    }); // Only use a popup/redirect resolver in browser environments\n\n\n    var resolver = typeof window !== 'undefined' ? CompatPopupRedirectResolver : undefined;\n    this._delegate = provider.initialize({\n      options: {\n        persistence: buildPersistenceHierarchy(apiKey, app.name),\n        popupRedirectResolver: resolver\n      }\n    });\n\n    this._delegate._updateErrorMap(exp.debugErrorMap);\n\n    this.linkUnderlyingAuth();\n  }\n\n  _createClass(Auth, [{\n    key: \"emulatorConfig\",\n    get: function get() {\n      return this._delegate.emulatorConfig;\n    }\n  }, {\n    key: \"currentUser\",\n    get: function get() {\n      if (!this._delegate.currentUser) {\n        return null;\n      }\n\n      return User.getOrCreate(this._delegate.currentUser);\n    }\n  }, {\n    key: \"languageCode\",\n    get: function get() {\n      return this._delegate.languageCode;\n    },\n    set: function set(languageCode) {\n      this._delegate.languageCode = languageCode;\n    }\n  }, {\n    key: \"settings\",\n    get: function get() {\n      return this._delegate.settings;\n    }\n  }, {\n    key: \"tenantId\",\n    get: function get() {\n      return this._delegate.tenantId;\n    },\n    set: function set(tid) {\n      this._delegate.tenantId = tid;\n    }\n  }, {\n    key: \"useDeviceLanguage\",\n    value: function useDeviceLanguage() {\n      this._delegate.useDeviceLanguage();\n    }\n  }, {\n    key: \"signOut\",\n    value: function signOut() {\n      return this._delegate.signOut();\n    }\n  }, {\n    key: \"useEmulator\",\n    value: function useEmulator(url, options) {\n      exp.connectAuthEmulator(this._delegate, url, options);\n    }\n  }, {\n    key: \"applyActionCode\",\n    value: function applyActionCode(code) {\n      return exp.applyActionCode(this._delegate, code);\n    }\n  }, {\n    key: \"checkActionCode\",\n    value: function checkActionCode(code) {\n      return exp.checkActionCode(this._delegate, code);\n    }\n  }, {\n    key: \"confirmPasswordReset\",\n    value: function confirmPasswordReset(code, newPassword) {\n      return exp.confirmPasswordReset(this._delegate, code, newPassword);\n    }\n  }, {\n    key: \"createUserWithEmailAndPassword\",\n    value: function () {\n      var _createUserWithEmailAndPassword = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12(email, password) {\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                return _context12.abrupt(\"return\", convertCredential(this._delegate, exp.createUserWithEmailAndPassword(this._delegate, email, password)));\n\n              case 1:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n\n      function createUserWithEmailAndPassword(_x21, _x22) {\n        return _createUserWithEmailAndPassword.apply(this, arguments);\n      }\n\n      return createUserWithEmailAndPassword;\n    }()\n  }, {\n    key: \"fetchProvidersForEmail\",\n    value: function fetchProvidersForEmail(email) {\n      return this.fetchSignInMethodsForEmail(email);\n    }\n  }, {\n    key: \"fetchSignInMethodsForEmail\",\n    value: function fetchSignInMethodsForEmail(email) {\n      return exp.fetchSignInMethodsForEmail(this._delegate, email);\n    }\n  }, {\n    key: \"isSignInWithEmailLink\",\n    value: function isSignInWithEmailLink(emailLink) {\n      return exp.isSignInWithEmailLink(this._delegate, emailLink);\n    }\n  }, {\n    key: \"getRedirectResult\",\n    value: function () {\n      var _getRedirectResult = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13() {\n        var credential;\n        return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                _assert$1(_isPopupRedirectSupported(), this._delegate, \"operation-not-supported-in-this-environment\"\n                /* OPERATION_NOT_SUPPORTED */\n                );\n\n                _context13.next = 3;\n                return exp.getRedirectResult(this._delegate, CompatPopupRedirectResolver);\n\n              case 3:\n                credential = _context13.sent;\n\n                if (credential) {\n                  _context13.next = 6;\n                  break;\n                }\n\n                return _context13.abrupt(\"return\", {\n                  credential: null,\n                  user: null\n                });\n\n              case 6:\n                return _context13.abrupt(\"return\", convertCredential(this._delegate, Promise.resolve(credential)));\n\n              case 7:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n\n      function getRedirectResult() {\n        return _getRedirectResult.apply(this, arguments);\n      }\n\n      return getRedirectResult;\n    }() // This function should only be called by frameworks (e.g. FirebaseUI-web) to log their usage.\n    // It is not intended for direct use by developer apps. NO jsdoc here to intentionally leave it\n    // out of autogenerated documentation pages to reduce accidental misuse.\n\n  }, {\n    key: \"addFrameworkForLogging\",\n    value: function addFrameworkForLogging(framework) {\n      exp.addFrameworkForLogging(this._delegate, framework);\n    }\n  }, {\n    key: \"onAuthStateChanged\",\n    value: function onAuthStateChanged(nextOrObserver, errorFn, completed) {\n      var _wrapObservers = wrapObservers(nextOrObserver, errorFn, completed),\n          next = _wrapObservers.next,\n          error = _wrapObservers.error,\n          complete = _wrapObservers.complete;\n\n      return this._delegate.onAuthStateChanged(next, error, complete);\n    }\n  }, {\n    key: \"onIdTokenChanged\",\n    value: function onIdTokenChanged(nextOrObserver, errorFn, completed) {\n      var _wrapObservers2 = wrapObservers(nextOrObserver, errorFn, completed),\n          next = _wrapObservers2.next,\n          error = _wrapObservers2.error,\n          complete = _wrapObservers2.complete;\n\n      return this._delegate.onIdTokenChanged(next, error, complete);\n    }\n  }, {\n    key: \"sendSignInLinkToEmail\",\n    value: function sendSignInLinkToEmail(email, actionCodeSettings) {\n      return exp.sendSignInLinkToEmail(this._delegate, email, actionCodeSettings);\n    }\n  }, {\n    key: \"sendPasswordResetEmail\",\n    value: function sendPasswordResetEmail(email, actionCodeSettings) {\n      return exp.sendPasswordResetEmail(this._delegate, email, actionCodeSettings || undefined);\n    }\n  }, {\n    key: \"setPersistence\",\n    value: function () {\n      var _setPersistence = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14(persistence) {\n        var converted, isIndexedDBFullySupported;\n        return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                _validatePersistenceArgument(this._delegate, persistence);\n\n                _context14.t0 = persistence;\n                _context14.next = _context14.t0 === Persistence.SESSION ? 4 : _context14.t0 === Persistence.LOCAL ? 6 : _context14.t0 === Persistence.NONE ? 11 : 13;\n                break;\n\n              case 4:\n                converted = exp.browserSessionPersistence;\n                return _context14.abrupt(\"break\", 14);\n\n              case 6:\n                _context14.next = 8;\n                return exp._getInstance(exp.indexedDBLocalPersistence)._isAvailable();\n\n              case 8:\n                isIndexedDBFullySupported = _context14.sent;\n                converted = isIndexedDBFullySupported ? exp.indexedDBLocalPersistence : exp.browserLocalPersistence;\n                return _context14.abrupt(\"break\", 14);\n\n              case 11:\n                converted = exp.inMemoryPersistence;\n                return _context14.abrupt(\"break\", 14);\n\n              case 13:\n                return _context14.abrupt(\"return\", exp._fail(\"argument-error\"\n                /* ARGUMENT_ERROR */\n                , {\n                  appName: this._delegate.name\n                }));\n\n              case 14:\n                return _context14.abrupt(\"return\", this._delegate.setPersistence(converted));\n\n              case 15:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this);\n      }));\n\n      function setPersistence(_x23) {\n        return _setPersistence.apply(this, arguments);\n      }\n\n      return setPersistence;\n    }()\n  }, {\n    key: \"signInAndRetrieveDataWithCredential\",\n    value: function signInAndRetrieveDataWithCredential(credential) {\n      return this.signInWithCredential(credential);\n    }\n  }, {\n    key: \"signInAnonymously\",\n    value: function signInAnonymously() {\n      return convertCredential(this._delegate, exp.signInAnonymously(this._delegate));\n    }\n  }, {\n    key: \"signInWithCredential\",\n    value: function signInWithCredential(credential) {\n      return convertCredential(this._delegate, exp.signInWithCredential(this._delegate, credential));\n    }\n  }, {\n    key: \"signInWithCustomToken\",\n    value: function signInWithCustomToken(token) {\n      return convertCredential(this._delegate, exp.signInWithCustomToken(this._delegate, token));\n    }\n  }, {\n    key: \"signInWithEmailAndPassword\",\n    value: function signInWithEmailAndPassword(email, password) {\n      return convertCredential(this._delegate, exp.signInWithEmailAndPassword(this._delegate, email, password));\n    }\n  }, {\n    key: \"signInWithEmailLink\",\n    value: function signInWithEmailLink(email, emailLink) {\n      return convertCredential(this._delegate, exp.signInWithEmailLink(this._delegate, email, emailLink));\n    }\n  }, {\n    key: \"signInWithPhoneNumber\",\n    value: function signInWithPhoneNumber(phoneNumber, applicationVerifier) {\n      return convertConfirmationResult(this._delegate, exp.signInWithPhoneNumber(this._delegate, phoneNumber, applicationVerifier));\n    }\n  }, {\n    key: \"signInWithPopup\",\n    value: function () {\n      var _signInWithPopup = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee15(provider) {\n        return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                _assert$1(_isPopupRedirectSupported(), this._delegate, \"operation-not-supported-in-this-environment\"\n                /* OPERATION_NOT_SUPPORTED */\n                );\n\n                return _context15.abrupt(\"return\", convertCredential(this._delegate, exp.signInWithPopup(this._delegate, provider, CompatPopupRedirectResolver)));\n\n              case 2:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15, this);\n      }));\n\n      function signInWithPopup(_x24) {\n        return _signInWithPopup.apply(this, arguments);\n      }\n\n      return signInWithPopup;\n    }()\n  }, {\n    key: \"signInWithRedirect\",\n    value: function () {\n      var _signInWithRedirect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee16(provider) {\n        return _regeneratorRuntime.wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                _assert$1(_isPopupRedirectSupported(), this._delegate, \"operation-not-supported-in-this-environment\"\n                /* OPERATION_NOT_SUPPORTED */\n                );\n\n                _context16.next = 3;\n                return _savePersistenceForRedirect(this._delegate);\n\n              case 3:\n                return _context16.abrupt(\"return\", exp.signInWithRedirect(this._delegate, provider, CompatPopupRedirectResolver));\n\n              case 4:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee16, this);\n      }));\n\n      function signInWithRedirect(_x25) {\n        return _signInWithRedirect.apply(this, arguments);\n      }\n\n      return signInWithRedirect;\n    }()\n  }, {\n    key: \"updateCurrentUser\",\n    value: function updateCurrentUser(user) {\n      // remove ts-ignore once overloads are defined for exp functions to accept compat objects\n      // @ts-ignore\n      return this._delegate.updateCurrentUser(user);\n    }\n  }, {\n    key: \"verifyPasswordResetCode\",\n    value: function verifyPasswordResetCode(code) {\n      return exp.verifyPasswordResetCode(this._delegate, code);\n    }\n  }, {\n    key: \"unwrap\",\n    value: function unwrap() {\n      return this._delegate;\n    }\n  }, {\n    key: \"_delete\",\n    value: function _delete() {\n      return this._delegate._delete();\n    }\n  }, {\n    key: \"linkUnderlyingAuth\",\n    value: function linkUnderlyingAuth() {\n      var _this = this;\n\n      this._delegate.wrapped = function () {\n        return _this;\n      };\n    }\n  }]);\n\n  return Auth;\n}();\n\nAuth.Persistence = Persistence;\n\nfunction wrapObservers(nextOrObserver, error, complete) {\n  var next = nextOrObserver;\n\n  if (typeof nextOrObserver !== 'function') {\n    next = nextOrObserver.next;\n    error = nextOrObserver.error;\n    complete = nextOrObserver.complete;\n  } // We know 'next' is now a function\n\n\n  var oldNext = next;\n\n  var newNext = function newNext(user) {\n    return oldNext(user && User.getOrCreate(user));\n  };\n\n  return {\n    next: newNext,\n    error: error,\n    complete: complete\n  };\n}\n\nfunction buildPersistenceHierarchy(apiKey, appName) {\n  // Note this is slightly different behavior: in this case, the stored\n  // persistence is checked *first* rather than last. This is because we want\n  // to prefer stored persistence type in the hierarchy. This is an empty\n  // array if window is not available or there is no pending redirect\n  var persistences = _getPersistencesFromRedirect(apiKey, appName); // If \"self\" is available, add indexedDB\n\n\n  if (typeof self !== 'undefined' && !persistences.includes(exp.indexedDBLocalPersistence)) {\n    persistences.push(exp.indexedDBLocalPersistence);\n  } // If \"window\" is available, add HTML Storage persistences\n\n\n  if (typeof window !== 'undefined') {\n    for (var _i = 0, _arr = [exp.browserLocalPersistence, exp.browserSessionPersistence]; _i < _arr.length; _i++) {\n      var persistence = _arr[_i];\n\n      if (!persistences.includes(persistence)) {\n        persistences.push(persistence);\n      }\n    }\n  } // Add in-memory as a final fallback\n\n\n  if (!persistences.includes(exp.inMemoryPersistence)) {\n    persistences.push(exp.inMemoryPersistence);\n  }\n\n  return persistences;\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar PhoneAuthProvider = /*#__PURE__*/function () {\n  function PhoneAuthProvider() {\n    _classCallCheck(this, PhoneAuthProvider);\n\n    this.providerId = 'phone'; // TODO: remove ts-ignore when moving types from auth-types to auth-compat\n    // @ts-ignore\n\n    this._delegate = new exp.PhoneAuthProvider(unwrap(firebase.auth()));\n  }\n\n  _createClass(PhoneAuthProvider, [{\n    key: \"verifyPhoneNumber\",\n    value: function verifyPhoneNumber(phoneInfoOptions, applicationVerifier) {\n      return this._delegate.verifyPhoneNumber( // The implementation matches but the types are subtly incompatible\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      phoneInfoOptions, applicationVerifier);\n    }\n  }, {\n    key: \"unwrap\",\n    value: function unwrap() {\n      return this._delegate;\n    }\n  }], [{\n    key: \"credential\",\n    value: function credential(verificationId, verificationCode) {\n      return exp.PhoneAuthProvider.credential(verificationId, verificationCode);\n    }\n  }]);\n\n  return PhoneAuthProvider;\n}();\n\nPhoneAuthProvider.PHONE_SIGN_IN_METHOD = exp.PhoneAuthProvider.PHONE_SIGN_IN_METHOD;\nPhoneAuthProvider.PROVIDER_ID = exp.PhoneAuthProvider.PROVIDER_ID;\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar _assert = exp._assert;\n\nvar RecaptchaVerifier = /*#__PURE__*/function () {\n  function RecaptchaVerifier(container, parameters) {\n    var app = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : firebase.app();\n\n    _classCallCheck(this, RecaptchaVerifier);\n\n    var _a; // API key is required for web client RPC calls.\n\n\n    _assert((_a = app.options) === null || _a === void 0 ? void 0 : _a.apiKey, \"invalid-api-key\"\n    /* INVALID_API_KEY */\n    , {\n      appName: app.name\n    });\n\n    this._delegate = new exp.RecaptchaVerifier(container, // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    parameters, // TODO: remove ts-ignore when moving types from auth-types to auth-compat\n    // @ts-ignore\n    app.auth());\n    this.type = this._delegate.type;\n  }\n\n  _createClass(RecaptchaVerifier, [{\n    key: \"clear\",\n    value: function clear() {\n      this._delegate.clear();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this._delegate.render();\n    }\n  }, {\n    key: \"verify\",\n    value: function verify() {\n      return this._delegate.verify();\n    }\n  }]);\n\n  return RecaptchaVerifier;\n}();\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar AUTH_TYPE = 'auth-compat'; // Create auth components to register with firebase.\n// Provides Auth public APIs.\n\nfunction registerAuthCompat(instance) {\n  instance.INTERNAL.registerComponent(new Component(AUTH_TYPE, function (container) {\n    // getImmediate for FirebaseApp will always succeed\n    var app = container.getProvider('app-compat').getImmediate();\n    var authProvider = container.getProvider('auth');\n    return new Auth(app, authProvider);\n  }, \"PUBLIC\"\n  /* PUBLIC */\n  ).setServiceProps({\n    ActionCodeInfo: {\n      Operation: {\n        EMAIL_SIGNIN: exp.ActionCodeOperation.EMAIL_SIGNIN,\n        PASSWORD_RESET: exp.ActionCodeOperation.PASSWORD_RESET,\n        RECOVER_EMAIL: exp.ActionCodeOperation.RECOVER_EMAIL,\n        REVERT_SECOND_FACTOR_ADDITION: exp.ActionCodeOperation.REVERT_SECOND_FACTOR_ADDITION,\n        VERIFY_AND_CHANGE_EMAIL: exp.ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL,\n        VERIFY_EMAIL: exp.ActionCodeOperation.VERIFY_EMAIL\n      }\n    },\n    EmailAuthProvider: exp.EmailAuthProvider,\n    FacebookAuthProvider: exp.FacebookAuthProvider,\n    GithubAuthProvider: exp.GithubAuthProvider,\n    GoogleAuthProvider: exp.GoogleAuthProvider,\n    OAuthProvider: exp.OAuthProvider,\n    SAMLAuthProvider: exp.SAMLAuthProvider,\n    PhoneAuthProvider: PhoneAuthProvider,\n    PhoneMultiFactorGenerator: exp.PhoneMultiFactorGenerator,\n    RecaptchaVerifier: RecaptchaVerifier,\n    TwitterAuthProvider: exp.TwitterAuthProvider,\n    Auth: Auth,\n    AuthCredential: exp.AuthCredential,\n    Error: FirebaseError\n  }).setInstantiationMode(\"LAZY\"\n  /* LAZY */\n  ).setMultipleInstances(false));\n  instance.registerVersion(name, version);\n}\n\nregisterAuthCompat(firebase);","map":{"version":3,"sources":["/home/jasonzjc/Java_Programs/amazon-clone/node_modules/@firebase/auth-compat/src/platform.ts","/home/jasonzjc/Java_Programs/amazon-clone/node_modules/@firebase/auth-compat/src/persistence.ts","/home/jasonzjc/Java_Programs/amazon-clone/node_modules/@firebase/auth-compat/src/popup_redirect.ts","/home/jasonzjc/Java_Programs/amazon-clone/node_modules/@firebase/auth-compat/src/wrap.ts","/home/jasonzjc/Java_Programs/amazon-clone/node_modules/@firebase/auth-compat/src/user_credential.ts","/home/jasonzjc/Java_Programs/amazon-clone/node_modules/@firebase/auth-compat/src/user.ts","/home/jasonzjc/Java_Programs/amazon-clone/node_modules/@firebase/auth-compat/src/auth.ts","/home/jasonzjc/Java_Programs/amazon-clone/node_modules/@firebase/auth-compat/src/phone_auth_provider.ts","/home/jasonzjc/Java_Programs/amazon-clone/node_modules/@firebase/auth-compat/src/recaptcha_verifier.ts","/home/jasonzjc/Java_Programs/amazon-clone/node_modules/@firebase/auth-compat/index.ts"],"names":["impl","_assert","CompatAuthProvider","CompatRecaptchaVerifier"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as impl from '@firebase/auth/internal';\nimport {\n  getUA,\n  isBrowserExtension,\n  isReactNative,\n  isNode,\n  isIE,\n  isIndexedDBAvailable\n} from '@firebase/util';\n\ndeclare global {\n  interface Document {\n    documentMode?: number;\n  }\n}\n\nconst CORDOVA_ONDEVICEREADY_TIMEOUT_MS = 1000;\n\nfunction _getCurrentScheme(): string | null {\n  return self?.location?.protocol || null;\n}\n\n/**\n * @return {boolean} Whether the current environment is http or https.\n */\nfunction _isHttpOrHttps(): boolean {\n  return _getCurrentScheme() === 'http:' || _getCurrentScheme() === 'https:';\n}\n\n/**\n * @param {?string=} ua The user agent.\n * @return {boolean} Whether the app is rendered in a mobile iOS or Android\n *     Cordova environment.\n */\nexport function _isAndroidOrIosCordovaScheme(ua: string = getUA()): boolean {\n  return !!(\n    (_getCurrentScheme() === 'file:' || _getCurrentScheme() === 'ionic:') &&\n    ua.toLowerCase().match(/iphone|ipad|ipod|android/)\n  );\n}\n\n/**\n * @return {boolean} Whether the environment is a native environment, where\n *     CORS checks do not apply.\n */\nfunction _isNativeEnvironment(): boolean {\n  return isReactNative() || isNode();\n}\n\n/**\n * Checks whether the user agent is IE11.\n * @return {boolean} True if it is IE11.\n */\nfunction _isIe11(): boolean {\n  return isIE() && document?.documentMode === 11;\n}\n\n/**\n * Checks whether the user agent is Edge.\n * @param {string} userAgent The browser user agent string.\n * @return {boolean} True if it is Edge.\n */\nfunction _isEdge(ua: string = getUA()): boolean {\n  return /Edge\\/\\d+/.test(ua);\n}\n\n/**\n * @param {?string=} opt_userAgent The navigator user agent.\n * @return {boolean} Whether local storage is not synchronized between an iframe\n *     and a popup of the same domain.\n */\nfunction _isLocalStorageNotSynchronized(ua: string = getUA()): boolean {\n  return _isIe11() || _isEdge(ua);\n}\n\n/** @return {boolean} Whether web storage is supported. */\nexport function _isWebStorageSupported(): boolean {\n  try {\n    const storage = self.localStorage;\n    const key = impl._generateEventId();\n    if (storage) {\n      // setItem will throw an exception if we cannot access WebStorage (e.g.,\n      // Safari in private mode).\n      storage['setItem'](key, '1');\n      storage['removeItem'](key);\n      // For browsers where iframe web storage does not synchronize with a popup\n      // of the same domain, indexedDB is used for persistent storage. These\n      // browsers include IE11 and Edge.\n      // Make sure it is supported (IE11 and Edge private mode does not support\n      // that).\n      if (_isLocalStorageNotSynchronized()) {\n        // In such browsers, if indexedDB is not supported, an iframe cannot be\n        // notified of the popup sign in result.\n        return isIndexedDBAvailable();\n      }\n      return true;\n    }\n  } catch (e) {\n    // localStorage is not available from a worker. Test availability of\n    // indexedDB.\n    return _isWorker() && isIndexedDBAvailable();\n  }\n  return false;\n}\n\n/**\n * @param {?Object=} global The optional global scope.\n * @return {boolean} Whether current environment is a worker.\n */\nexport function _isWorker(): boolean {\n  // WorkerGlobalScope only defined in worker environment.\n  return (\n    typeof global !== 'undefined' &&\n    'WorkerGlobalScope' in global &&\n    'importScripts' in global\n  );\n}\n\nexport function _isPopupRedirectSupported(): boolean {\n  return (\n    (_isHttpOrHttps() ||\n      isBrowserExtension() ||\n      _isAndroidOrIosCordovaScheme()) &&\n    // React Native with remote debugging reports its location.protocol as\n    // http.\n    !_isNativeEnvironment() &&\n    // Local storage has to be supported for browser popup and redirect\n    // operations to work.\n    _isWebStorageSupported() &&\n    // DOM, popups and redirects are not supported within a worker.\n    !_isWorker()\n  );\n}\n\n/** Quick check that indicates the platform *may* be Cordova */\nexport function _isLikelyCordova(): boolean {\n  return _isAndroidOrIosCordovaScheme() && typeof document !== 'undefined';\n}\n\nexport async function _isCordova(): Promise<boolean> {\n  if (!_isLikelyCordova()) {\n    return false;\n  }\n\n  return new Promise(resolve => {\n    const timeoutId = setTimeout(() => {\n      // We've waited long enough; the telltale Cordova event didn't happen\n      resolve(false);\n    }, CORDOVA_ONDEVICEREADY_TIMEOUT_MS);\n\n    document.addEventListener('deviceready', () => {\n      clearTimeout(timeoutId);\n      resolve(true);\n    });\n  });\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as exp from '@firebase/auth/internal';\nimport { isIndexedDBAvailable, isNode, isReactNative } from '@firebase/util';\nimport { _isWebStorageSupported, _isWorker } from './platform';\n\nexport const Persistence = {\n  LOCAL: 'local',\n  NONE: 'none',\n  SESSION: 'session'\n};\n\nconst _assert: typeof exp._assert = exp._assert;\n\nconst PERSISTENCE_KEY = 'persistence';\n\n/**\n * Validates that an argument is a valid persistence value. If an invalid type\n * is specified, an error is thrown synchronously.\n */\nexport function _validatePersistenceArgument(\n  auth: exp.Auth,\n  persistence: string\n): void {\n  _assert(\n    Object.values(Persistence).includes(persistence),\n    auth,\n    exp.AuthErrorCode.INVALID_PERSISTENCE\n  );\n  // Validate if the specified type is supported in the current environment.\n  if (isReactNative()) {\n    // This is only supported in a browser.\n    _assert(\n      persistence !== Persistence.SESSION,\n      auth,\n      exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE\n    );\n    return;\n  }\n  if (isNode()) {\n    // Only none is supported in Node.js.\n    _assert(\n      persistence === Persistence.NONE,\n      auth,\n      exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE\n    );\n    return;\n  }\n  if (_isWorker()) {\n    // In a worker environment, either LOCAL or NONE are supported.\n    // If indexedDB not supported and LOCAL provided, throw an error\n    _assert(\n      persistence === Persistence.NONE ||\n        (persistence === Persistence.LOCAL && isIndexedDBAvailable()),\n      auth,\n      exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE\n    );\n    return;\n  }\n  // This is restricted by what the browser supports.\n  _assert(\n    persistence === Persistence.NONE || _isWebStorageSupported(),\n    auth,\n    exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE\n  );\n}\n\nexport async function _savePersistenceForRedirect(\n  auth: exp.AuthInternal\n): Promise<void> {\n  await auth._initializationPromise;\n\n  const win = getSelfWindow();\n  const key = exp._persistenceKeyName(\n    PERSISTENCE_KEY,\n    auth.config.apiKey,\n    auth.name\n  );\n  if (win?.sessionStorage) {\n    win.sessionStorage.setItem(key, auth._getPersistence());\n  }\n}\n\nexport function _getPersistencesFromRedirect(\n  apiKey: string,\n  appName: string\n): exp.Persistence[] {\n  const win = getSelfWindow();\n  if (!win?.sessionStorage) {\n    return [];\n  }\n\n  const key = exp._persistenceKeyName(PERSISTENCE_KEY, apiKey, appName);\n  const persistence = win.sessionStorage.getItem(key);\n\n  switch (persistence) {\n    case Persistence.NONE:\n      return [exp.inMemoryPersistence];\n    case Persistence.LOCAL:\n      return [exp.indexedDBLocalPersistence, exp.browserSessionPersistence];\n    case Persistence.SESSION:\n      return [exp.browserSessionPersistence];\n    default:\n      return [];\n  }\n}\n\nfunction getSelfWindow(): Window | null {\n  return typeof window !== 'undefined' ? window : null;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as exp from '@firebase/auth/internal';\nimport { _isCordova, _isLikelyCordova } from './platform';\n\nconst _assert: typeof exp._assert = exp._assert;\n\n/** Platform-agnostic popup-redirect resolver */\nexport class CompatPopupRedirectResolver\n  implements exp.PopupRedirectResolverInternal\n{\n  // Create both resolvers for dynamic resolution later\n  private readonly browserResolver: exp.PopupRedirectResolverInternal =\n    exp._getInstance(exp.browserPopupRedirectResolver);\n  private readonly cordovaResolver: exp.PopupRedirectResolverInternal =\n    exp._getInstance(exp.cordovaPopupRedirectResolver);\n  // The actual resolver in use: either browserResolver or cordovaResolver.\n  private underlyingResolver: exp.PopupRedirectResolverInternal | null = null;\n  _redirectPersistence = exp.browserSessionPersistence;\n\n  _completeRedirectFn: (\n    auth: exp.Auth,\n    resolver: exp.PopupRedirectResolver,\n    bypassAuthState: boolean\n  ) => Promise<exp.UserCredential | null> = exp._getRedirectResult;\n\n  async _initialize(auth: exp.AuthImpl): Promise<exp.EventManager> {\n    await this.selectUnderlyingResolver();\n    return this.assertedUnderlyingResolver._initialize(auth);\n  }\n\n  async _openPopup(\n    auth: exp.AuthImpl,\n    provider: exp.AuthProvider,\n    authType: exp.AuthEventType,\n    eventId?: string\n  ): Promise<exp.AuthPopup> {\n    await this.selectUnderlyingResolver();\n    return this.assertedUnderlyingResolver._openPopup(\n      auth,\n      provider,\n      authType,\n      eventId\n    );\n  }\n\n  async _openRedirect(\n    auth: exp.AuthImpl,\n    provider: exp.AuthProvider,\n    authType: exp.AuthEventType,\n    eventId?: string\n  ): Promise<void> {\n    await this.selectUnderlyingResolver();\n    return this.assertedUnderlyingResolver._openRedirect(\n      auth,\n      provider,\n      authType,\n      eventId\n    );\n  }\n\n  _isIframeWebStorageSupported(\n    auth: exp.AuthImpl,\n    cb: (support: boolean) => unknown\n  ): void {\n    this.assertedUnderlyingResolver._isIframeWebStorageSupported(auth, cb);\n  }\n\n  _originValidation(auth: exp.Auth): Promise<void> {\n    return this.assertedUnderlyingResolver._originValidation(auth);\n  }\n\n  get _shouldInitProactively(): boolean {\n    return _isLikelyCordova() || this.browserResolver._shouldInitProactively;\n  }\n\n  private get assertedUnderlyingResolver(): exp.PopupRedirectResolverInternal {\n    _assert(this.underlyingResolver, exp.AuthErrorCode.INTERNAL_ERROR);\n    return this.underlyingResolver;\n  }\n\n  private async selectUnderlyingResolver(): Promise<void> {\n    if (this.underlyingResolver) {\n      return;\n    }\n\n    // We haven't yet determined whether or not we're in Cordova; go ahead\n    // and determine that state now.\n    const isCordova = await _isCordova();\n    this.underlyingResolver = isCordova\n      ? this.cordovaResolver\n      : this.browserResolver;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Forward direction wrapper from Compat --unwrap-> Exp */\nexport interface Wrapper<T> {\n  unwrap(): T;\n}\n\n/** Reverse direction wrapper from Exp --wrapped--> Compat */\nexport interface ReverseWrapper<T> {\n  wrapped(): T;\n}\n\nexport function unwrap<T>(object: unknown): T {\n  return (object as Wrapper<T>).unwrap();\n}\n\nexport function wrapped<T>(object: unknown): T {\n  return (object as ReverseWrapper<T>).wrapped();\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as exp from '@firebase/auth/internal';\nimport * as compat from '@firebase/auth-types';\nimport { FirebaseError } from '@firebase/util';\nimport { Auth } from './auth';\nimport { User } from './user';\nimport { unwrap, wrapped } from './wrap';\n\nfunction credentialFromResponse(\n  userCredential: exp.UserCredentialInternal\n): exp.AuthCredential | null {\n  return credentialFromObject(userCredential);\n}\n\nfunction attachExtraErrorFields(auth: exp.Auth, e: FirebaseError): void {\n  // The response contains all fields from the server which may or may not\n  // actually match the underlying type\n  const response = (e.customData as exp.TaggedWithTokenResponse | undefined)\n    ?._tokenResponse as unknown as Record<string, string>;\n  if (e.code === 'auth/multi-factor-auth-required') {\n    const mfaErr = e as compat.MultiFactorError;\n    mfaErr.resolver = new MultiFactorResolver(\n      auth,\n      exp.getMultiFactorResolver(auth, e as exp.MultiFactorError)\n    );\n  } else if (response) {\n    const credential = credentialFromObject(e);\n    const credErr = e as compat.AuthError;\n    if (credential) {\n      credErr.credential = credential;\n      credErr.tenantId = response.tenantId || undefined;\n      credErr.email = response.email || undefined;\n      credErr.phoneNumber = response.phoneNumber || undefined;\n    }\n  }\n}\n\nfunction credentialFromObject(\n  object: FirebaseError | exp.UserCredential\n): exp.AuthCredential | null {\n  const { _tokenResponse } = (\n    object instanceof FirebaseError ? object.customData : object\n  ) as exp.TaggedWithTokenResponse;\n  if (!_tokenResponse) {\n    return null;\n  }\n\n  // Handle phone Auth credential responses, as they have a different format\n  // from other backend responses (i.e. no providerId). This is also only the\n  // case for user credentials (does not work for errors).\n  if (!(object instanceof FirebaseError)) {\n    if ('temporaryProof' in _tokenResponse && 'phoneNumber' in _tokenResponse) {\n      return exp.PhoneAuthProvider.credentialFromResult(object);\n    }\n  }\n\n  const providerId = _tokenResponse.providerId;\n\n  // Email and password is not supported as there is no situation where the\n  // server would return the password to the client.\n  if (!providerId || providerId === exp.ProviderId.PASSWORD) {\n    return null;\n  }\n\n  let provider: Pick<\n    typeof exp.OAuthProvider,\n    'credentialFromResult' | 'credentialFromError'\n  >;\n  switch (providerId) {\n    case exp.ProviderId.GOOGLE:\n      provider = exp.GoogleAuthProvider;\n      break;\n    case exp.ProviderId.FACEBOOK:\n      provider = exp.FacebookAuthProvider;\n      break;\n    case exp.ProviderId.GITHUB:\n      provider = exp.GithubAuthProvider;\n      break;\n    case exp.ProviderId.TWITTER:\n      provider = exp.TwitterAuthProvider;\n      break;\n    default:\n      const {\n        oauthIdToken,\n        oauthAccessToken,\n        oauthTokenSecret,\n        pendingToken,\n        nonce\n      } = _tokenResponse as exp.SignInWithIdpResponse;\n      if (\n        !oauthAccessToken &&\n        !oauthTokenSecret &&\n        !oauthIdToken &&\n        !pendingToken\n      ) {\n        return null;\n      }\n      // TODO(avolkovi): uncomment this and get it working with SAML & OIDC\n      if (pendingToken) {\n        if (providerId.startsWith('saml.')) {\n          return exp.SAMLAuthCredential._create(providerId, pendingToken);\n        } else {\n          // OIDC and non-default providers excluding Twitter.\n          return exp.OAuthCredential._fromParams({\n            providerId,\n            signInMethod: providerId,\n            pendingToken,\n            idToken: oauthIdToken,\n            accessToken: oauthAccessToken\n          });\n        }\n      }\n      return new exp.OAuthProvider(providerId).credential({\n        idToken: oauthIdToken,\n        accessToken: oauthAccessToken,\n        rawNonce: nonce\n      });\n  }\n\n  return object instanceof FirebaseError\n    ? provider.credentialFromError(object)\n    : provider.credentialFromResult(object);\n}\n\nexport function convertCredential(\n  auth: exp.Auth,\n  credentialPromise: Promise<exp.UserCredential>\n): Promise<compat.UserCredential> {\n  return credentialPromise\n    .catch(e => {\n      if (e instanceof FirebaseError) {\n        attachExtraErrorFields(auth, e);\n      }\n      throw e;\n    })\n    .then(credential => {\n      const operationType = credential.operationType;\n      const user = credential.user;\n\n      return {\n        operationType,\n        credential: credentialFromResponse(\n          credential as exp.UserCredentialInternal\n        ),\n        additionalUserInfo: exp.getAdditionalUserInfo(\n          credential as exp.UserCredential\n        ),\n        user: User.getOrCreate(user)\n      };\n    });\n}\n\nexport async function convertConfirmationResult(\n  auth: exp.Auth,\n  confirmationResultPromise: Promise<exp.ConfirmationResult>\n): Promise<compat.ConfirmationResult> {\n  const confirmationResultExp = await confirmationResultPromise;\n  return {\n    verificationId: confirmationResultExp.verificationId,\n    confirm: (verificationCode: string) =>\n      convertCredential(auth, confirmationResultExp.confirm(verificationCode))\n  };\n}\n\nclass MultiFactorResolver implements compat.MultiFactorResolver {\n  readonly auth: Auth;\n  constructor(\n    auth: exp.Auth,\n    private readonly resolver: exp.MultiFactorResolver\n  ) {\n    this.auth = wrapped(auth);\n  }\n\n  get session(): compat.MultiFactorSession {\n    return this.resolver.session;\n  }\n\n  get hints(): compat.MultiFactorInfo[] {\n    return this.resolver.hints;\n  }\n\n  resolveSignIn(\n    assertion: compat.MultiFactorAssertion\n  ): Promise<compat.UserCredential> {\n    return convertCredential(\n      unwrap(this.auth),\n      this.resolver.resolveSignIn(assertion as exp.MultiFactorAssertion)\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as exp from '@firebase/auth/internal';\nimport * as compat from '@firebase/auth-types';\nimport { Compat } from '@firebase/util';\nimport { _savePersistenceForRedirect } from './persistence';\nimport { CompatPopupRedirectResolver } from './popup_redirect';\nimport {\n  convertConfirmationResult,\n  convertCredential\n} from './user_credential';\n\nexport class User implements compat.User, Compat<exp.User> {\n  // Maintain a map so that there's always a 1:1 mapping between new User and\n  // legacy compat users\n  private static readonly USER_MAP = new WeakMap<exp.User, User>();\n\n  readonly multiFactor: compat.MultiFactorUser;\n\n  private constructor(readonly _delegate: exp.User) {\n    this.multiFactor = exp.multiFactor(_delegate);\n  }\n\n  static getOrCreate(user: exp.User): User {\n    if (!User.USER_MAP.has(user)) {\n      User.USER_MAP.set(user, new User(user));\n    }\n\n    return User.USER_MAP.get(user)!;\n  }\n\n  delete(): Promise<void> {\n    return this._delegate.delete();\n  }\n  reload(): Promise<void> {\n    return this._delegate.reload();\n  }\n  toJSON(): object {\n    return this._delegate.toJSON();\n  }\n  getIdTokenResult(forceRefresh?: boolean): Promise<compat.IdTokenResult> {\n    return this._delegate.getIdTokenResult(forceRefresh);\n  }\n  getIdToken(forceRefresh?: boolean): Promise<string> {\n    return this._delegate.getIdToken(forceRefresh);\n  }\n  linkAndRetrieveDataWithCredential(\n    credential: compat.AuthCredential\n  ): Promise<compat.UserCredential> {\n    return this.linkWithCredential(credential);\n  }\n  async linkWithCredential(\n    credential: compat.AuthCredential\n  ): Promise<compat.UserCredential> {\n    return convertCredential(\n      this.auth,\n      exp.linkWithCredential(this._delegate, credential as exp.AuthCredential)\n    );\n  }\n  async linkWithPhoneNumber(\n    phoneNumber: string,\n    applicationVerifier: compat.ApplicationVerifier\n  ): Promise<compat.ConfirmationResult> {\n    return convertConfirmationResult(\n      this.auth,\n      exp.linkWithPhoneNumber(this._delegate, phoneNumber, applicationVerifier)\n    );\n  }\n  async linkWithPopup(\n    provider: compat.AuthProvider\n  ): Promise<compat.UserCredential> {\n    return convertCredential(\n      this.auth,\n      exp.linkWithPopup(\n        this._delegate,\n        provider as exp.AuthProvider,\n        CompatPopupRedirectResolver\n      )\n    );\n  }\n  async linkWithRedirect(provider: compat.AuthProvider): Promise<void> {\n    await _savePersistenceForRedirect(exp._castAuth(this.auth));\n    return exp.linkWithRedirect(\n      this._delegate,\n      provider as exp.AuthProvider,\n      CompatPopupRedirectResolver\n    );\n  }\n  reauthenticateAndRetrieveDataWithCredential(\n    credential: compat.AuthCredential\n  ): Promise<compat.UserCredential> {\n    return this.reauthenticateWithCredential(credential);\n  }\n  async reauthenticateWithCredential(\n    credential: compat.AuthCredential\n  ): Promise<compat.UserCredential> {\n    return convertCredential(\n      this.auth as unknown as exp.Auth,\n      exp.reauthenticateWithCredential(\n        this._delegate,\n        credential as exp.AuthCredential\n      )\n    );\n  }\n  reauthenticateWithPhoneNumber(\n    phoneNumber: string,\n    applicationVerifier: compat.ApplicationVerifier\n  ): Promise<compat.ConfirmationResult> {\n    return convertConfirmationResult(\n      this.auth,\n      exp.reauthenticateWithPhoneNumber(\n        this._delegate,\n        phoneNumber,\n        applicationVerifier\n      )\n    );\n  }\n  reauthenticateWithPopup(\n    provider: compat.AuthProvider\n  ): Promise<compat.UserCredential> {\n    return convertCredential(\n      this.auth,\n      exp.reauthenticateWithPopup(\n        this._delegate,\n        provider as exp.AuthProvider,\n        CompatPopupRedirectResolver\n      )\n    );\n  }\n  async reauthenticateWithRedirect(\n    provider: compat.AuthProvider\n  ): Promise<void> {\n    await _savePersistenceForRedirect(exp._castAuth(this.auth));\n    return exp.reauthenticateWithRedirect(\n      this._delegate,\n      provider as exp.AuthProvider,\n      CompatPopupRedirectResolver\n    );\n  }\n  sendEmailVerification(\n    actionCodeSettings?: compat.ActionCodeSettings | null\n  ): Promise<void> {\n    return exp.sendEmailVerification(this._delegate, actionCodeSettings);\n  }\n  async unlink(providerId: string): Promise<compat.User> {\n    await exp.unlink(this._delegate, providerId);\n    return this;\n  }\n  updateEmail(newEmail: string): Promise<void> {\n    return exp.updateEmail(this._delegate, newEmail);\n  }\n  updatePassword(newPassword: string): Promise<void> {\n    return exp.updatePassword(this._delegate, newPassword);\n  }\n  updatePhoneNumber(phoneCredential: compat.AuthCredential): Promise<void> {\n    return exp.updatePhoneNumber(\n      this._delegate,\n      phoneCredential as exp.PhoneAuthCredential\n    );\n  }\n  updateProfile(profile: {\n    displayName?: string | null;\n    photoURL?: string | null;\n  }): Promise<void> {\n    return exp.updateProfile(this._delegate, profile);\n  }\n  verifyBeforeUpdateEmail(\n    newEmail: string,\n    actionCodeSettings?: compat.ActionCodeSettings | null\n  ): Promise<void> {\n    return exp.verifyBeforeUpdateEmail(\n      this._delegate,\n      newEmail,\n      actionCodeSettings\n    );\n  }\n  get emailVerified(): boolean {\n    return this._delegate.emailVerified;\n  }\n  get isAnonymous(): boolean {\n    return this._delegate.isAnonymous;\n  }\n  get metadata(): compat.UserMetadata {\n    return this._delegate.metadata;\n  }\n  get phoneNumber(): string | null {\n    return this._delegate.phoneNumber;\n  }\n  get providerData(): Array<compat.UserInfo | null> {\n    return this._delegate.providerData;\n  }\n  get refreshToken(): string {\n    return this._delegate.refreshToken;\n  }\n  get tenantId(): string | null {\n    return this._delegate.tenantId;\n  }\n  get displayName(): string | null {\n    return this._delegate.displayName;\n  }\n  get email(): string | null {\n    return this._delegate.email;\n  }\n  get photoURL(): string | null {\n    return this._delegate.photoURL;\n  }\n  get providerId(): string {\n    return this._delegate.providerId;\n  }\n  get uid(): string {\n    return this._delegate.uid;\n  }\n  private get auth(): exp.Auth {\n    return (this._delegate as exp.UserImpl).auth as unknown as exp.Auth;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, _FirebaseService } from '@firebase/app-compat';\nimport * as exp from '@firebase/auth/internal';\nimport * as compat from '@firebase/auth-types';\nimport { Provider } from '@firebase/component';\nimport { ErrorFn, Observer, Unsubscribe } from '@firebase/util';\n\nimport {\n  _validatePersistenceArgument,\n  Persistence,\n  _getPersistencesFromRedirect,\n  _savePersistenceForRedirect\n} from './persistence';\nimport { _isPopupRedirectSupported } from './platform';\nimport { CompatPopupRedirectResolver } from './popup_redirect';\nimport { User } from './user';\nimport {\n  convertConfirmationResult,\n  convertCredential\n} from './user_credential';\nimport { ReverseWrapper, Wrapper } from './wrap';\n\nconst _assert: typeof exp._assert = exp._assert;\n\nexport class Auth\n  implements compat.FirebaseAuth, Wrapper<exp.Auth>, _FirebaseService\n{\n  static Persistence = Persistence;\n  readonly _delegate: exp.AuthImpl;\n\n  constructor(readonly app: FirebaseApp, provider: Provider<'auth'>) {\n    if (provider.isInitialized()) {\n      this._delegate = provider.getImmediate() as exp.AuthImpl;\n      this.linkUnderlyingAuth();\n      return;\n    }\n\n    const { apiKey } = app.options;\n    // TODO: platform needs to be determined using heuristics\n    _assert(apiKey, exp.AuthErrorCode.INVALID_API_KEY, {\n      appName: app.name\n    });\n\n    // TODO: platform needs to be determined using heuristics\n    _assert(apiKey, exp.AuthErrorCode.INVALID_API_KEY, {\n      appName: app.name\n    });\n\n    // Only use a popup/redirect resolver in browser environments\n    const resolver =\n      typeof window !== 'undefined' ? CompatPopupRedirectResolver : undefined;\n    this._delegate = provider.initialize({\n      options: {\n        persistence: buildPersistenceHierarchy(apiKey, app.name),\n        popupRedirectResolver: resolver\n      }\n    }) as exp.AuthImpl;\n\n    this._delegate._updateErrorMap(exp.debugErrorMap);\n    this.linkUnderlyingAuth();\n  }\n\n  get emulatorConfig(): compat.EmulatorConfig | null {\n    return this._delegate.emulatorConfig;\n  }\n\n  get currentUser(): compat.User | null {\n    if (!this._delegate.currentUser) {\n      return null;\n    }\n\n    return User.getOrCreate(this._delegate.currentUser);\n  }\n  get languageCode(): string | null {\n    return this._delegate.languageCode;\n  }\n  set languageCode(languageCode: string | null) {\n    this._delegate.languageCode = languageCode;\n  }\n  get settings(): compat.AuthSettings {\n    return this._delegate.settings;\n  }\n  get tenantId(): string | null {\n    return this._delegate.tenantId;\n  }\n  set tenantId(tid: string | null) {\n    this._delegate.tenantId = tid;\n  }\n  useDeviceLanguage(): void {\n    this._delegate.useDeviceLanguage();\n  }\n  signOut(): Promise<void> {\n    return this._delegate.signOut();\n  }\n  useEmulator(url: string, options?: { disableWarnings: boolean }): void {\n    exp.connectAuthEmulator(this._delegate, url, options);\n  }\n  applyActionCode(code: string): Promise<void> {\n    return exp.applyActionCode(this._delegate, code);\n  }\n\n  checkActionCode(code: string): Promise<compat.ActionCodeInfo> {\n    return exp.checkActionCode(this._delegate, code);\n  }\n\n  confirmPasswordReset(code: string, newPassword: string): Promise<void> {\n    return exp.confirmPasswordReset(this._delegate, code, newPassword);\n  }\n\n  async createUserWithEmailAndPassword(\n    email: string,\n    password: string\n  ): Promise<compat.UserCredential> {\n    return convertCredential(\n      this._delegate,\n      exp.createUserWithEmailAndPassword(this._delegate, email, password)\n    );\n  }\n  fetchProvidersForEmail(email: string): Promise<string[]> {\n    return this.fetchSignInMethodsForEmail(email);\n  }\n  fetchSignInMethodsForEmail(email: string): Promise<string[]> {\n    return exp.fetchSignInMethodsForEmail(this._delegate, email);\n  }\n  isSignInWithEmailLink(emailLink: string): boolean {\n    return exp.isSignInWithEmailLink(this._delegate, emailLink);\n  }\n  async getRedirectResult(): Promise<compat.UserCredential> {\n    _assert(\n      _isPopupRedirectSupported(),\n      this._delegate,\n      exp.AuthErrorCode.OPERATION_NOT_SUPPORTED\n    );\n    const credential = await exp.getRedirectResult(\n      this._delegate,\n      CompatPopupRedirectResolver\n    );\n    if (!credential) {\n      return {\n        credential: null,\n        user: null\n      };\n    }\n    return convertCredential(this._delegate, Promise.resolve(credential));\n  }\n\n  // This function should only be called by frameworks (e.g. FirebaseUI-web) to log their usage.\n  // It is not intended for direct use by developer apps. NO jsdoc here to intentionally leave it\n  // out of autogenerated documentation pages to reduce accidental misuse.\n  addFrameworkForLogging(framework: string): void {\n    exp.addFrameworkForLogging(this._delegate, framework);\n  }\n\n  onAuthStateChanged(\n    nextOrObserver: Observer<unknown> | ((a: compat.User | null) => unknown),\n    errorFn?: (error: compat.Error) => unknown,\n    completed?: Unsubscribe\n  ): Unsubscribe {\n    const { next, error, complete } = wrapObservers(\n      nextOrObserver,\n      errorFn,\n      completed\n    );\n    return this._delegate.onAuthStateChanged(next!, error, complete);\n  }\n  onIdTokenChanged(\n    nextOrObserver: Observer<unknown> | ((a: compat.User | null) => unknown),\n    errorFn?: (error: compat.Error) => unknown,\n    completed?: Unsubscribe\n  ): Unsubscribe {\n    const { next, error, complete } = wrapObservers(\n      nextOrObserver,\n      errorFn,\n      completed\n    );\n    return this._delegate.onIdTokenChanged(next!, error, complete);\n  }\n  sendSignInLinkToEmail(\n    email: string,\n    actionCodeSettings: compat.ActionCodeSettings\n  ): Promise<void> {\n    return exp.sendSignInLinkToEmail(this._delegate, email, actionCodeSettings);\n  }\n  sendPasswordResetEmail(\n    email: string,\n    actionCodeSettings?: compat.ActionCodeSettings | null\n  ): Promise<void> {\n    return exp.sendPasswordResetEmail(\n      this._delegate,\n      email,\n      actionCodeSettings || undefined\n    );\n  }\n  async setPersistence(persistence: string): Promise<void> {\n    _validatePersistenceArgument(this._delegate, persistence);\n    let converted;\n    switch (persistence) {\n      case Persistence.SESSION:\n        converted = exp.browserSessionPersistence;\n        break;\n      case Persistence.LOCAL:\n        // Not using isIndexedDBAvailable() since it only checks if indexedDB is defined.\n        const isIndexedDBFullySupported = await exp\n          ._getInstance<exp.PersistenceInternal>(exp.indexedDBLocalPersistence)\n          ._isAvailable();\n        converted = isIndexedDBFullySupported\n          ? exp.indexedDBLocalPersistence\n          : exp.browserLocalPersistence;\n        break;\n      case Persistence.NONE:\n        converted = exp.inMemoryPersistence;\n        break;\n      default:\n        return exp._fail(exp.AuthErrorCode.ARGUMENT_ERROR, {\n          appName: this._delegate.name\n        });\n    }\n\n    return this._delegate.setPersistence(converted);\n  }\n\n  signInAndRetrieveDataWithCredential(\n    credential: compat.AuthCredential\n  ): Promise<compat.UserCredential> {\n    return this.signInWithCredential(credential);\n  }\n  signInAnonymously(): Promise<compat.UserCredential> {\n    return convertCredential(\n      this._delegate,\n      exp.signInAnonymously(this._delegate)\n    );\n  }\n  signInWithCredential(\n    credential: compat.AuthCredential\n  ): Promise<compat.UserCredential> {\n    return convertCredential(\n      this._delegate,\n      exp.signInWithCredential(this._delegate, credential as exp.AuthCredential)\n    );\n  }\n  signInWithCustomToken(token: string): Promise<compat.UserCredential> {\n    return convertCredential(\n      this._delegate,\n      exp.signInWithCustomToken(this._delegate, token)\n    );\n  }\n  signInWithEmailAndPassword(\n    email: string,\n    password: string\n  ): Promise<compat.UserCredential> {\n    return convertCredential(\n      this._delegate,\n      exp.signInWithEmailAndPassword(this._delegate, email, password)\n    );\n  }\n  signInWithEmailLink(\n    email: string,\n    emailLink?: string\n  ): Promise<compat.UserCredential> {\n    return convertCredential(\n      this._delegate,\n      exp.signInWithEmailLink(this._delegate, email, emailLink)\n    );\n  }\n  signInWithPhoneNumber(\n    phoneNumber: string,\n    applicationVerifier: compat.ApplicationVerifier\n  ): Promise<compat.ConfirmationResult> {\n    return convertConfirmationResult(\n      this._delegate,\n      exp.signInWithPhoneNumber(\n        this._delegate,\n        phoneNumber,\n        applicationVerifier\n      )\n    );\n  }\n  async signInWithPopup(\n    provider: compat.AuthProvider\n  ): Promise<compat.UserCredential> {\n    _assert(\n      _isPopupRedirectSupported(),\n      this._delegate,\n      exp.AuthErrorCode.OPERATION_NOT_SUPPORTED\n    );\n    return convertCredential(\n      this._delegate,\n      exp.signInWithPopup(\n        this._delegate,\n        provider as exp.AuthProvider,\n        CompatPopupRedirectResolver\n      )\n    );\n  }\n  async signInWithRedirect(provider: compat.AuthProvider): Promise<void> {\n    _assert(\n      _isPopupRedirectSupported(),\n      this._delegate,\n      exp.AuthErrorCode.OPERATION_NOT_SUPPORTED\n    );\n\n    await _savePersistenceForRedirect(this._delegate);\n    return exp.signInWithRedirect(\n      this._delegate,\n      provider as exp.AuthProvider,\n      CompatPopupRedirectResolver\n    );\n  }\n  updateCurrentUser(user: compat.User | null): Promise<void> {\n    // remove ts-ignore once overloads are defined for exp functions to accept compat objects\n    // @ts-ignore\n    return this._delegate.updateCurrentUser(user);\n  }\n  verifyPasswordResetCode(code: string): Promise<string> {\n    return exp.verifyPasswordResetCode(this._delegate, code);\n  }\n  unwrap(): exp.Auth {\n    return this._delegate;\n  }\n  _delete(): Promise<void> {\n    return this._delegate._delete();\n  }\n  private linkUnderlyingAuth(): void {\n    (this._delegate as unknown as ReverseWrapper<Auth>).wrapped = () => this;\n  }\n}\n\nfunction wrapObservers(\n  nextOrObserver: Observer<unknown> | ((a: compat.User | null) => unknown),\n  error?: (error: compat.Error) => unknown,\n  complete?: Unsubscribe\n): Partial<Observer<exp.User | null>> {\n  let next = nextOrObserver;\n  if (typeof nextOrObserver !== 'function') {\n    ({ next, error, complete } = nextOrObserver);\n  }\n\n  // We know 'next' is now a function\n  const oldNext = next as (a: compat.User | null) => unknown;\n\n  const newNext = (user: exp.User | null): unknown =>\n    oldNext(user && User.getOrCreate(user as exp.User));\n  return {\n    next: newNext,\n    error: error as ErrorFn,\n    complete\n  };\n}\n\nfunction buildPersistenceHierarchy(\n  apiKey: string,\n  appName: string\n): exp.Persistence[] {\n  // Note this is slightly different behavior: in this case, the stored\n  // persistence is checked *first* rather than last. This is because we want\n  // to prefer stored persistence type in the hierarchy. This is an empty\n  // array if window is not available or there is no pending redirect\n  const persistences = _getPersistencesFromRedirect(apiKey, appName);\n\n  // If \"self\" is available, add indexedDB\n  if (\n    typeof self !== 'undefined' &&\n    !persistences.includes(exp.indexedDBLocalPersistence)\n  ) {\n    persistences.push(exp.indexedDBLocalPersistence);\n  }\n\n  // If \"window\" is available, add HTML Storage persistences\n  if (typeof window !== 'undefined') {\n    for (const persistence of [\n      exp.browserLocalPersistence,\n      exp.browserSessionPersistence\n    ]) {\n      if (!persistences.includes(persistence)) {\n        persistences.push(persistence);\n      }\n    }\n  }\n\n  // Add in-memory as a final fallback\n  if (!persistences.includes(exp.inMemoryPersistence)) {\n    persistences.push(exp.inMemoryPersistence);\n  }\n\n  return persistences;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as exp from '@firebase/auth/internal';\nimport * as compat from '@firebase/auth-types';\nimport firebase from '@firebase/app-compat';\nimport { Compat } from '@firebase/util';\nimport { unwrap } from './wrap';\n\nexport class PhoneAuthProvider\n  implements compat.PhoneAuthProvider, Compat<exp.PhoneAuthProvider>\n{\n  providerId = 'phone';\n  readonly _delegate: exp.PhoneAuthProvider;\n\n  static PHONE_SIGN_IN_METHOD = exp.PhoneAuthProvider.PHONE_SIGN_IN_METHOD;\n  static PROVIDER_ID = exp.PhoneAuthProvider.PROVIDER_ID;\n\n  static credential(\n    verificationId: string,\n    verificationCode: string\n  ): compat.AuthCredential {\n    return exp.PhoneAuthProvider.credential(verificationId, verificationCode);\n  }\n\n  constructor() {\n    // TODO: remove ts-ignore when moving types from auth-types to auth-compat\n    // @ts-ignore\n    this._delegate = new exp.PhoneAuthProvider(unwrap(firebase.auth!()));\n  }\n\n  verifyPhoneNumber(\n    phoneInfoOptions:\n      | string\n      | compat.PhoneSingleFactorInfoOptions\n      | compat.PhoneMultiFactorEnrollInfoOptions\n      | compat.PhoneMultiFactorSignInInfoOptions,\n    applicationVerifier: compat.ApplicationVerifier\n  ): Promise<string> {\n    return this._delegate.verifyPhoneNumber(\n      // The implementation matches but the types are subtly incompatible\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      phoneInfoOptions as any,\n      applicationVerifier\n    );\n  }\n\n  unwrap(): exp.PhoneAuthProvider {\n    return this._delegate;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport firebase, { FirebaseApp } from '@firebase/app-compat';\nimport * as exp from '@firebase/auth/internal';\nimport * as compat from '@firebase/auth-types';\nimport { Compat } from '@firebase/util';\n\nconst _assert: typeof exp._assert = exp._assert;\n\nexport class RecaptchaVerifier\n  implements compat.RecaptchaVerifier, Compat<exp.ApplicationVerifier>\n{\n  readonly _delegate: exp.RecaptchaVerifier;\n  type: string;\n  constructor(\n    container: HTMLElement | string,\n    parameters?: object | null,\n    app: FirebaseApp = firebase.app()\n  ) {\n    // API key is required for web client RPC calls.\n    _assert(app.options?.apiKey, exp.AuthErrorCode.INVALID_API_KEY, {\n      appName: app.name\n    });\n    this._delegate = new exp.RecaptchaVerifier(\n      container,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      parameters as any,\n\n      // TODO: remove ts-ignore when moving types from auth-types to auth-compat\n      // @ts-ignore\n      app.auth!()\n    );\n    this.type = this._delegate.type;\n  }\n  clear(): void {\n    this._delegate.clear();\n  }\n  render(): Promise<number> {\n    return this._delegate.render();\n  }\n  verify(): Promise<string> {\n    return this._delegate.verify();\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable camelcase */\n\nimport firebase, { _FirebaseNamespace } from '@firebase/app-compat';\nimport * as impl from '@firebase/auth/internal';\nimport {\n  Component,\n  ComponentType,\n  InstantiationMode\n} from '@firebase/component';\nimport { FirebaseError } from '@firebase/util';\n\nimport * as types from '@firebase/auth-types';\nimport { name, version } from './package.json';\nimport { Auth } from './src/auth';\nimport { PhoneAuthProvider as CompatAuthProvider } from './src/phone_auth_provider';\nimport { RecaptchaVerifier as CompatRecaptchaVerifier } from './src/recaptcha_verifier';\n\nconst AUTH_TYPE = 'auth-compat';\n\ndeclare module '@firebase/component' {\n  interface NameServiceMapping {\n    'auth-compat': types.FirebaseAuth;\n  }\n}\n\ndeclare module '@firebase/app-compat' {\n  interface FirebaseNamespace {\n    auth: {\n      (app?: FirebaseApp): types.FirebaseAuth;\n      Auth: typeof types.FirebaseAuth;\n      EmailAuthProvider: typeof types.EmailAuthProvider;\n      EmailAuthProvider_Instance: typeof types.EmailAuthProvider_Instance;\n      FacebookAuthProvider: typeof types.FacebookAuthProvider;\n      FacebookAuthProvider_Instance: typeof types.FacebookAuthProvider_Instance;\n      GithubAuthProvider: typeof types.GithubAuthProvider;\n      GithubAuthProvider_Instance: typeof types.GithubAuthProvider_Instance;\n      GoogleAuthProvider: typeof types.GoogleAuthProvider;\n      GoogleAuthProvider_Instance: typeof types.GoogleAuthProvider_Instance;\n      OAuthProvider: typeof types.OAuthProvider;\n      SAMLAuthProvider: typeof types.SAMLAuthProvider;\n      PhoneAuthProvider: typeof types.PhoneAuthProvider;\n      PhoneAuthProvider_Instance: typeof types.PhoneAuthProvider_Instance;\n      PhoneMultiFactorGenerator: typeof types.PhoneMultiFactorGenerator;\n      RecaptchaVerifier: typeof types.RecaptchaVerifier;\n      RecaptchaVerifier_Instance: typeof types.RecaptchaVerifier_Instance;\n      TwitterAuthProvider: typeof types.TwitterAuthProvider;\n      TwitterAuthProvider_Instance: typeof types.TwitterAuthProvider_Instance;\n    };\n  }\n  interface FirebaseApp {\n    auth?(): types.FirebaseAuth;\n  }\n}\n\n// Create auth components to register with firebase.\n// Provides Auth public APIs.\nfunction registerAuthCompat(instance: _FirebaseNamespace): void {\n  instance.INTERNAL.registerComponent(\n    new Component(\n      AUTH_TYPE,\n      container => {\n        // getImmediate for FirebaseApp will always succeed\n        const app = container.getProvider('app-compat').getImmediate();\n        const authProvider = container.getProvider('auth');\n        return new Auth(app, authProvider);\n      },\n      ComponentType.PUBLIC\n    )\n      .setServiceProps({\n        ActionCodeInfo: {\n          Operation: {\n            EMAIL_SIGNIN: impl.ActionCodeOperation.EMAIL_SIGNIN,\n            PASSWORD_RESET: impl.ActionCodeOperation.PASSWORD_RESET,\n            RECOVER_EMAIL: impl.ActionCodeOperation.RECOVER_EMAIL,\n            REVERT_SECOND_FACTOR_ADDITION:\n              impl.ActionCodeOperation.REVERT_SECOND_FACTOR_ADDITION,\n            VERIFY_AND_CHANGE_EMAIL:\n              impl.ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL,\n            VERIFY_EMAIL: impl.ActionCodeOperation.VERIFY_EMAIL\n          }\n        },\n        EmailAuthProvider: impl.EmailAuthProvider,\n        FacebookAuthProvider: impl.FacebookAuthProvider,\n        GithubAuthProvider: impl.GithubAuthProvider,\n        GoogleAuthProvider: impl.GoogleAuthProvider,\n        OAuthProvider: impl.OAuthProvider,\n        SAMLAuthProvider: impl.SAMLAuthProvider,\n        PhoneAuthProvider: CompatAuthProvider,\n        PhoneMultiFactorGenerator: impl.PhoneMultiFactorGenerator,\n        RecaptchaVerifier: CompatRecaptchaVerifier,\n        TwitterAuthProvider: impl.TwitterAuthProvider,\n        Auth,\n        AuthCredential: impl.AuthCredential,\n        Error: FirebaseError\n      })\n      .setInstantiationMode(InstantiationMode.LAZY)\n      .setMultipleInstances(false)\n  );\n\n  instance.registerVersion(name, version);\n}\n\nregisterAuthCompat(firebase as _FirebaseNamespace);\n"]},"metadata":{},"sourceType":"module"}