{"ast":null,"code":"var _jsxFileName = \"/home/jasonzjc/Java_Programs/amazon-clone/src/Payment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport CheckoutProduct from './CheckoutProduct';\nimport './Payment.css';\nimport { useStateValue } from './StateProvider';\nimport { Link, useHistory } from \"react-router-dom\";\nimport { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\nimport CurrencyFormat from 'react-currency-format';\nimport { getBasketTotal } from './reducer';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Payment() {\n  _s();\n\n  const [{\n    basket,\n    user\n  }, dispatch] = useStateValue();\n  const stripe = useStripe();\n  const elements = useElements();\n  const [succeeded, setSucceeded] = useState(false);\n  const [processing, setProcessing] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [disabled, setDisabled] = useState(true);\n  const [clientSecret, setClientSecret] = useState(true);\n  useEffect(() => {\n    // generate the special stripe secret which allows us to charge a customer\n    const getClientSecret = async () => {\n      const response = await axios({\n        method: 'post',\n        // Stripe expects the total in a currencies subunits, so * 100\n        url: '/payments/create?total=${getBasketTotal(basket) * 100}'\n      });\n      setClientSecret(response.data.clientSecret); // will make sense with backend\n    };\n\n    getClientSecret();\n  }, [basket]);\n\n  const handleSubmit = async event => {\n    // Do all the fancy stripe stuff ...\n    event.preventDefault();\n    setProcessing(true);\n    const payload = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement)\n      }\n    }).then(_ref => {\n      let {\n        paymentIntent\n      } = _ref;\n      // paymentIntent = payment confirmation\n      setSucceeded(true);\n      setError(null);\n      setProcessing(false);\n      history.replace('/orders');\n    });\n  };\n\n  const handleChange = event => {\n    // Listen for changes in the CardElement\n    // and display any errors as the customer types their card details\n    setDisabled(event.empty);\n    setError(event.error ? event.error.message : \"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"payment\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"payment__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Checkout (\", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"./checkout\",\n          children: [basket === null || basket === void 0 ? void 0 : basket.length, \" items\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this), \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"payment__section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"payment__title\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Delivery Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"payment__address\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: user === null || user === void 0 ? void 0 : user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"123 React Lane\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Los Angeles, CA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"payment__section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"payment__title\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Review items and delivery\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"payment__items\",\n          children: basket.map(item => /*#__PURE__*/_jsxDEV(CheckoutProduct, {\n            id: item.id,\n            title: item.title,\n            image: item.image,\n            price: item.price,\n            rating: item.rating\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"payment__section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"payment__title\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Payment Method\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"payment__details\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onClick: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(CardElement, {\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"payment__priceContainer\",\n              children: [/*#__PURE__*/_jsxDEV(CurrencyFormat, {\n                renderText: value => /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: [\"Order Total: \", value]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 41\n                }, this),\n                decimalScale: 2,\n                value: getBasketTotal(basket),\n                displayType: \"text\",\n                thousandSeparator: true,\n                prefix: \"$\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                disabled: processing || disabled || succeeded,\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: processing ? /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Processing\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 141,\n                    columnNumber: 57\n                  }, this) : \"Buy Now\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 29\n            }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Payment, \"YIltpUzrDlWYTdNt6GmV2N/E7Lo=\", false, function () {\n  return [useStateValue, useStripe, useElements];\n});\n\n_c = Payment;\nexport default Payment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"sources":["/home/jasonzjc/Java_Programs/amazon-clone/src/Payment.js"],"names":["React","useEffect","useState","CheckoutProduct","useStateValue","Link","useHistory","CardElement","useElements","useStripe","CurrencyFormat","getBasketTotal","axios","Payment","basket","user","dispatch","stripe","elements","succeeded","setSucceeded","processing","setProcessing","error","setError","disabled","setDisabled","clientSecret","setClientSecret","getClientSecret","response","method","url","data","handleSubmit","event","preventDefault","payload","confirmCardPayment","payment_method","card","getElement","then","paymentIntent","history","replace","handleChange","empty","message","length","email","map","item","id","title","image","price","rating","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport CheckoutProduct from './CheckoutProduct'\nimport './Payment.css'\nimport { useStateValue } from './StateProvider'\nimport { Link, useHistory } from \"react-router-dom\"\nimport { CardElement, useElements, useStripe } from '@stripe/react-stripe-js'\nimport CurrencyFormat from 'react-currency-format'\nimport { getBasketTotal } from './reducer'\nimport axios from 'axios'\n\nfunction Payment() {\n\n    const [{ basket, user }, dispatch] = useStateValue()\n\n    const stripe = useStripe()\n    const elements = useElements()\n\n    const [succeeded, setSucceeded] = useState(false)\n    const [processing, setProcessing] = useState(\"\")\n    const [error, setError] = useState(null)\n    const [disabled, setDisabled] = useState(true)\n    const [clientSecret, setClientSecret] = useState(true)\n\n\n    useEffect(() => {\n        // generate the special stripe secret which allows us to charge a customer\n        const getClientSecret = async () => {\n            const response = await axios({\n                method: 'post',\n                // Stripe expects the total in a currencies subunits, so * 100\n                url: '/payments/create?total=${getBasketTotal(basket) * 100}'\n            })\n            setClientSecret(response.data.clientSecret) // will make sense with backend\n        }\n\n        getClientSecret()\n    }, [basket])\n\n\n    const handleSubmit = async (event) => {\n        // Do all the fancy stripe stuff ...\n        event.preventDefault()\n        setProcessing(true)\n        \n        const payload = await stripe.confirmCardPayment(clientSecret, {\n            payment_method: {\n                card: elements.getElement(CardElement)\n            }\n        }).then(( { paymentIntent } ) => {\n            // paymentIntent = payment confirmation\n            setSucceeded(true)\n            setError(null)\n            setProcessing(false)\n\n            history.replace('/orders')\n        }) \n    }\n\n\n    const handleChange = event => {\n        // Listen for changes in the CardElement\n        // and display any errors as the customer types their card details\n        setDisabled(event.empty)\n        setError(event.error ? event.error.message : \"\")\n    }\n\n\n    return (\n        <div className='payment'>\n            \n            <div className='payment__container'>\n\n                <h1>\n                    Checkout (\n                        <Link\n                            to=\"./checkout\">{basket?.length} items\n                        </Link>\n                    )\n                </h1>\n\n\n                {/* Payment section - delivery address */}\n                <div className='payment__section'>\n                    <div className='payment__title'>\n                        <h3>Delivery Address</h3>\n                    </div>\n\n                    <div className='payment__address'>\n                        <p>{user?.email}</p>\n                        <p>123 React Lane</p>\n                        <p>Los Angeles, CA</p>\n                    </div>\n                </div>\n\n                {/* Payment section - review items */}\n                <div className='payment__section'>\n                    <div className='payment__title'>\n                        <h3>Review items and delivery</h3>\n                    </div>\n\n                    <div className='payment__items'>\n                        {/* All the products in your basket */}\n                        {basket.map(item => (\n                            <CheckoutProduct\n                                id={item.id}\n                                title={item.title}\n                                image={item.image}\n                                price={item.price}\n                                rating={item.rating}\n                            />\n                        ))}\n                    </div>\n\n                </div>\n\n                {/* Payment section - payment method */}\n                <div className='payment__section'>\n                    <div className='payment__title'>\n                        <h3>Payment Method</h3>\n                    </div>\n\n                    <div className='payment__details'>\n                        {/* Stripe magic will go */}\n                        {/* Help to use the credit card */}\n                        <form onClick={handleSubmit}>\n                            <CardElement onChange={handleChange}/>\n\n                            <div className='payment__priceContainer'>\n                                <CurrencyFormat\n                                    renderText={(value) => (\n                                        <h3>Order Total: {value}</h3>\n                                    )}\n                                    decimalScale={2}\n                                    value={getBasketTotal(basket)}\n                                    displayType={\"text\"}\n                                    thousandSeparator={true}\n                                    prefix='$'\n                                />\n\n                                <button disabled={processing || disabled || succeeded}>\n                                    <span>{processing ? <p>Processing</p> : \"Buy Now\"}</span>\n                                </button>\n                            </div>\n\n                            {/* Errors */}\n                            {error && <div>{error}</div>}\n\n                        </form>\n                    </div>\n                </div>\n\n            </div>\n\n        </div>\n    )\n}\n\nexport default Payment\n"]},"metadata":{},"sourceType":"module"}